作用域
先来谈谈变量的作用域
变量的作用域无非就是两种：全局变量和局部变量。

全局作用域 ：
最外层函数定义的变量拥有全局作用域，即对任何内部函数来说，都是可以访问的：

局部作用域：
和全局作用域相反，局部作用域一般只在固定片段内可访问到，而对于函数外部是无法访问的，最常见的例如函数内部

需要注意的是，函数内部声明的变量的时候，一定要使用var命令，如果不用的话，你实际上声明了一个全局变量

作用域链
那什么是作用域链？
我的理解是，根据在内部函数可以访问外部函数变量的这种机制，用链式查找决定哪些数据能被内部函数访问

执行环境

每个函数运行时都会产生一个执行环境，而这个执行环境怎么表示呢？js为每一个执行环境关联了一个变量对象。环境中定义的所有变量和函数都保存在这个对象中。

全局执行环境是最外层的执行环境，全局执行环境被认为是window对象，因此所有全局变量和函数都作为window对象的属性和方法创建的。

当某个函数第一次调用时，就会创建一个执行环境(execution context)以及相应的作用域链，并把作用域链赋给一个特殊的内部属性[scope]。然后使用this,arguments(arguments在全局环境中不存在)和其他命名参数的值来初始化函数的活动对象(activation object).当前执行环境的变量对象始终在作用域链的第0位