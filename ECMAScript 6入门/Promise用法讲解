Promise对象有以下两个特点：

1.对象的状态不受外界影响。Promise对象代表一个异步操作，有3种状态：Pending(进行中)， Resolved(已完成，又称为Fulfilled)和Rejected(已失败)。只有异步操作的结果可以决定当前是哪一种状态，任何其他操作都无法改变这个状态。这也是Promise这个名字的由来。它在英语中的意思就是承诺，表示其他手段无法改变。

2.一旦状态改变就不会再变，任何时候都可以得到这个结果。Promise对象的状态改变只有两种可能：从Pending变为Resolved和从Pending变为Rejected。只要其中之一发生，状态就凝固了，不会再变了，会一直保持这个结果。就算改变已经发生，你再对Promise对象添加任何回调函数，也会立即得到这个结果。这与事件完全不同。事件的特点是，如果你错过了它，再去监听是得不到结果的。

优点：
有了promise对象，就可以将异步操作以同步操作的流程表达出来，避免了层层嵌套的回调函数。此外，Promise对象提供统一的接口，使得控制异步操作更加容易。

缺点：
1）首先，无法取消Promise,一旦新建它就会立即执行，无法中途取消。
2）其次，如果不设置回调函数，Promise内部抛出的错误不会反应到外部。
3）再者，当处理Pending状态时，无法得到目前进展到哪一个阶段（刚刚开始还是即将完成）


2.基本用法
ES6规定,Promise对象是一个构造函数，用来生成Promise实例。

var promise = new Promise((resolve, reject) => {


  if (异步操作成功) {
    resolve(value)
  } else {
    reject(value)
  }
})

Promise构造函数接受一个函数作为参数，该函数的两个参数分别是resolve和reject.它们是两个函数，则javascript引擎提供，不用自己部署