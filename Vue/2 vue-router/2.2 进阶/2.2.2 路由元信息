路由元信息
定义路由的时候可以配置meta字段：

const router = new VueRouter({
  routes: [{
    path: '/foo',
    component: Foo,
    children: [{
      path: 'bar',
      componnet: Bar,
      meta: {requiresAuth: true}
    }]
  }]
})

那么如何访问这个meta字段呢？

首先，我们称呼routes配置中的每个路由对象为路由记录。路由记录可以是嵌套的，因此，当一个路由匹配成功后，他可能匹配多个路由记录

例如，根据上面的路由配置, /foo/bar这个URL将会匹配父路由记录以及子路由记录。

一个路由匹配到所有路由记录会暴露为$route对象(还有在导航守卫中的路由对象)的$route.matched数组。因此，我们需要遍历$route.matched来检查路由记录中的meta字段。

下面例子展示在全局导航守卫中检查元字段：

router.beforeEach((to, from, next) => {
  if (to.matched.some(record => record.meta.requiresAuth)) {
     // this route requires auth, check if logged in
    // if not, redirect to login page.
    if (!auth.loggedIn()) {
      next({
        path: '/login',
        query: { redirect: to.fullPath }
      })
    } else {
      next()
    }
  } else {
    next() //确保一定要调用 next()
  }
})