绑定HTML Class

1.对象语法
我们可以传给v-bind:class 一个对象，以动态地切换class:
<div v-bind:class="{active: isActive}"></div>

上面的语法表示active这个class存在与否将取决于数据属性isActive的truthiness

你可以在对象中传入更多属性来动态切换多个class。此外，v-bind:class指令也可以与普通class属性共存。当有也下模板：

<div class="static" v-bind:class="{active: isActive, 'text-danger': hasError}"></div>

data: {
  isActive: true,
  hasError: false
}

结果渲染为：

<div class="static active"></div>

2.数组语法

我们可以把一个数组传给v-bind:class，以应用一个class列表：

<div v-bind:class="[activeClass, errorClass]">

data: {
  activeClass: 'active',
  errorClass: 'text-danger'
}

渲染为：

<div class="active text-danger"></div>

如果你想切换列表中的class,可以用三元表达式:

<div v-bind:class="[isActive: activeClass: errorClass]">

data: {
  isActive: true,
  activeClass: 'active',
  errorClass: 'text-danger'
}

不过，当有多个条件 class 时这样写有些繁琐。所以在数组语法中也可以使用对象语法：

<div v-bind:class="[{ active: isActive }, errorClass]"></div>

3.用在组件上

当在一个自定义组件上使用class属性时，这些类将被添加到该组件的根元素上面。这个元素上已经存在的类不会被覆盖。

例如，如果你声明了这个组件：

Vue.component('my-component', {
  template: '<div class="foo bar"></div>'
})

<my-component class="baz boo"></my-component>

渲染结果为：

<div class="foo bar baz boo"></div>

对于带数据绑定 class 也同样适用：

<my-component v-bind:class="{ active: isActive }"></my-component>
