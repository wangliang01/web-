正则表达式-语法

正则表达式描述了一种字符串匹配的模式，可以用来检查一个串是否含有某种子串，将匹配的子串替换或者从某个子串取出符合某个条件的子串等。

例如：

  runoo+b,可以匹配runoob, runooob, runoooooob等， +号代表前面的字符必须至少出现一次(1次或者多次)

  runoo*b, 可以匹配runob, runoob, runoooob等， *号代表字符可以不出现，也可以出现1次或者多次（0次，1次或者多次）

  runoo?b, 可以匹配runob, runoob, ？号代表前面的字符最多只可以出现一次（0次， 1次）

构造正则表达式的方法和创建数学表达式的方法一样，也就是用多种元字符与运算符可以将小的表达式结合在一起来创建更大的表达式。正则表达式的组件可以是单个字符，字符集合，字符范围，字符间的选择或者所有这些组件的任意组合。

正则表达式是由普通字符（例如字符a到z）以及特殊字符（称之为元字符）组成的文字模式。模式描述在搜索文本时要匹配的一个或多个字符串。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。



1.普通字符

普通字符包括没有显式指定为元字符的所有可打印字符和不可打印字符。这包括所有大写字母和小写字母，所有数字，所有标点符号和一些其他符号。


1）非打印字符

非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：

\f: 匹配一个换页符。等价于\x0c和\cL

\n: 匹配一个换行符。等价于\x0a和\cJ

\r: 匹配一个回车符。等价于\xod和\cM

\s: 匹配任何空白字符，包括空格，制表符，换页符等等。等价于[\f\n\t\v]

\S: 匹配任何非空白字符。等价于[^\f\n\t\v]

\t: 匹配一个制表符。等价于\x09和\cl 

\v: 匹配一个垂直制表符。等价于\x0b和\cK


2. 特殊字符 

所谓特殊字符，就是一些有特殊含义的字符，如上面说的runoob*b中的*，简单地说就是表示任何字符串的意思。如果要查找字符串中的*符号，则需要对*进行转义，即在其前面加一个\

许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符转义，即，将反斜杠字符\放在它们前面，下表列出了正则表达式的特殊字符：

& 匹配转入字符串的结尾位置，如果设置了RegExp对象的Multiline属性，则$也匹配\n或\r。要匹配$字符本身，请使用\$

() 标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用\(和\)

* 匹配前面的子表达式零次或多次，要匹配*字符，请使用\*

+ 匹配前面的子表达式一次或多次，要匹配+字符，请使用\+

. 匹配除换行符\n之外的任何单个字符。要匹配., 请使用\.

[ 标记一个中括号表达式的开始，要匹配[, 请使用\[

? 匹配前面的子表达式零次或者一次，或指明一个非贪婪限定符。要匹配?字符，请使用\?

\ 将下一个字符标记为特殊字符，或原义字符，或后引用，或八进制转义符，要匹配\,请使用\\

^ 匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合，要匹配^字符本身，请使用\^

{ 标记限定符表达式的开始。要匹配 {，请使用 \{。

|	指明两项之间的一个选择。要匹配 |，请使用 \|。



限定符

限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。一共有6种：

* 匹配前面的子表达式零次或多次，等价于{0,}

+ 匹配前面的子表达式一次或多次，等价于{1,}

? 匹配前面的子表达式零次或一次， 等价于{0,1}

{n} 匹配前面的子表达式n次， n是一个非负数

{n,} 匹配前面的子表达式至少n次， n是一个非负数

{n,m} 匹配前面的子表达式最少n次，最多m次，n<=m,且n和m均为非负数


例如：
写一个章节编号的正则表达式，最小为1，最大无限

/^[1-9][0-9]*$/

限定章节编号为1-99
/^[1-9][0-9]?$/ 或者 /^[1-9][0-9]{0,1}/


*****************************************************************************************************************

注意：*，+限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它的后面加上一个?就可以实现非贪婪或最小匹配。
通过在*, +限定符之后放置?, 该表达式从贪心表达式转换为非贪心表达式或者最小匹配

*****************************************************************************************************************


定位符

定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内，在一个单词的开头或者一个单词的结尾。

定位符用来描述字符串或单词的边界，^和&分别指字符串的开始和结束， \b描述单词的前或后边界，\B表示非单词边界。

^ 匹配输入字符串开始的位置，如果设置了RegExp对象的Multiline属性，^还会与\n或\r之后的位置匹配

$ 匹配输入字符串结尾的位置，如果设置了RegExp对象的Multiline属性，$还会与\n或\r之后的位置匹配

\b 匹配一个字或单词边界，即字与空格间的位置

\B 非字边界匹配

*****************************************************************************************************************
注意: 不能将限定符与定位符一起使用.由于在紧靠换行或者字边界的前面或后面不能有一个以上的位置,因为不允许诸如^*之类的表达式.
若要匹配一行文本开始处的文全,请在正则表达式的开始使用^字符.不要将^的这种用法与中手中括号表达式内的用法混淆
若要匹配一行文本的结束处的文件,请在正则表达式的结束处使用$字符


*****************************************************************************************************************


选择

用圆括号将所有选择项括起来,相邻的选择项之间用|分隔,但用圆括号会有一个副作用,使相关的匹配会被缓存,此时可用?:放在第一个选项前来消除这种副作用

其中?:是非捕获元之一,还有两个非捕获元是?=和?!,前者为正向预查,在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串,后者为负向预查,在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串.




*****************************************************************************************************************
注意:
1) . 特殊字符在中括号表达式时 如 [.] 只会匹配 .字符，等价于 \.，而非匹配除换行符 \n 外的所有字符。

2) ^ 和 [^指定字符串] 之间的区别:

  ^ 指的是匹配字符串开始的位置

  [^指定字符串] 指的是除指定字符串以外的其他字符串

*****************************************************************************************************************
