命令行接口(CLI)
webpack提供了命令行接口(CLI),以便对构建过程进行配置和交互。这对于制定早期原型、轮廓、编写npm脚本，或者一些个人自定义需求很有用。
为了更合适且方便地使用配置，可以在webpack.config.js中对webpack进行配置。CLI中传入的任何参数会在配置文件中映射为对应的参数。

不使用配置文件的用法 

webpack <entry> [<entry>] <output>

<entry>
一个文件名或一组被命名的文件名，作为构建项目的入口起点。您可以传递多个入口（每个入口在启动时加载）。如果传递一个形式为<name> = <request> 的键值对，则可以创建一个额外的入口起点。它将被映射到配置选项的entry属性。

<output>
要保存的bundled文件的路径和文件名。它将映射到配置选项output.path 和output.filename

常用配置

列出命令行所有可用的配置选项
webpack --help
webpack -h

使用配置文件进行构建
指定其它的配置文件。配置文件默认为webpack.config.js,如果你想使用其它配置文件，可以加入这个参数。
webpack --config example.config.js

指定构建环境
传入webpack配置文件中使用的环境变量。
webpack --env.production    # 生产环境设置为 true
webpack --env.platform=web  # 平台设置为 "web"

以 JSON 格式输出 webpack 的运行结果

webpack --json
webpack --json > stats.json

Debug 配置
以下这些配置可以帮助你在 Webpack 编译过程中更好地 debug。

参数	说明	输入类型	默认值
--debug	把 loader 设置为 debug 模式	boolean	false
--devtool	为打包好的资源定义 source map 的类型	string	-
--progress	打印出编译进度的百分比值	boolean	false

Watch 配置
这些配置可以用于观察依赖文件的变化，一旦有变化，则可以重新执行构建流程。

参数	说明
--watch, -w	观察文件系统的变化
--save, -s	在保存的时候重新编译，无论文件是否变化
--watch-aggregate-timeout	指定一个毫秒数，在这个时间内，文件若发送了多次变化，会被合并
--watch-poll	轮询观察文件变化的时间间隔（同时会打开轮询机制）
--watch-stdin, --stdin	当 stdin 关闭时，退出进程

性能优化配置
在生产环境的构建时，这些配置可以用于调整的一些性能相关的配置。

参数	解释说明	使用的插件
--optimize-max-chunks	限制 chunk 的数量	LimitChunkCountPlugin
--optimize-min-chunk-size	限制 chunk 的最小体积	MinChunkSizePlugin
--optimize-minimize	压缩混淆 javascript，并且把 loader 设置为 minimizing	UglifyJsPlugin & LoaderOptionsPlugin